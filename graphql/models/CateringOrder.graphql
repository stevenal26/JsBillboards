type CateringOrder {
    "Unique primary key."
    id: ID!

    "Description."
    description: String!

    
    # items: [CateringOrderItem!]! @belongsTo(relation: "cateringOrderItems")

    "Delivery date."
    deliveryDate: DateTime! @rename(attribute: "delivery_date")

    "Head count."
    headCount: Int! @rename(attribute: "head_count")

    "Phone number."
    phoneNumber: String! @rename(attribute: "phone_number")

    "Order by."
    orderBy: String! @rename(attribute: "order_by")

    "Order for."
    orderFor: String! @rename(attribute: "order_for")

    "Order date."
    orderDate: Date! @rename(attribute: "order_date")

    "Whether is taxable."
    isTaxable: Boolean! @rename(attribute: "is_taxable")

    "Price."
    price: Float!

    "Tax."
    tax: Float!

    "Total."
    total: Float!

    "Shipt to name."
    shipToName: String! @rename(attribute: "ship_to_name")

    "Ship to address."
    shipToAddress: String! @rename(attribute: "ship_to_address")

    "Bill to name."
    billToName: String! @rename(attribute: "bill_to_name")

    "Bill to address."
    billToAddress: String! @rename(attribute: "bill_to_address")

    "Whether is cash order."
    isCashOrder: Boolean! @rename(attribute: "is_cash_order")

    "Charge number."
    chargeNumber: String! @rename(attribute: "charge_number")


}

extend type Query {
    "List multiple catering orders."
    cateringOrders: [CateringOrder!]! @paginate
}