type City {
    "Unique primary key."
    id: ID!

    "The state that owns the county."
    state: State

    "Name."
    name: String!

    "Tax."
    tax: Float!

    "When the city was created."
    createdAt: DateTime! @rename(attribute: "created_at")

    "When the city was last updated."
    updatedAt: DateTime! @rename(attribute: "updated_at")
}

input CreateCityInput {
    "Name."
    name: String! @rules(apply: ["required"])

    "State."
    state: ConnectBelongsToState!

    "Tax."
    tax: Float! @rules(apply: ["required", "between:0,99.99"])
}

input UpdateCityInput {
    "Id."
    id: ID!

    "Name."
    name: String @rules(apply: ["filled"])

    "State."
    state: ConnectBelongsToState

    "Tax."
    tax: Float @rules(apply: ["filled", "between:0,99.99"])
}

input ConnectBelongsToState {
    "Connect id."
    connect: ID! @rules(apply: ["required", "exists:states,id"])
}

extend type Query {
    "List multiple cities."
    cities: [City!]! @all
}

extend type Mutation {
    "Create a new city."
    createCity(
        "City input."
        cityInput: CreateCityInput! @spread
    ): City @create

    "Update an existing city."
    updateCity(
        "City input."
        cityInput: UpdateCityInput! @spread
    ): City @update

    "Delete an existing city."
    deleteCity(
        "Id."
        id: ID!
    ): City @delete
}